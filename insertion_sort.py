# -*- coding: utf-8 -*-
"""insertion_sort.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1n5ch_NWYvnYHkO83IvJelEQwHAW_Wzta
"""

def insertion_sort(A, len):
    swap_count = 0 # 바꾼 횟수를 표시
    for i in range(1, int(len)):
        k = i
        while (k > 0):
            if int(A[k]) < int(A[k-1]): # 값을 비교하여 현재 값보다 이전의 값이 더 작으면
                temp = A[k] # 리스트의 값을 서로 바꿈
                A[k] = A[k-1]
                A[k-1] = temp
                swap_count +=1
            k = k - 1
    return swap_count

f = open('/content/rosalind_ins (1).txt', 'r') # 파일 열기
len = f.readline().replace('\n',"") # 데이터 정제 (개행 문자 제거)
num = f.readline().replace('\n',"")
f.close() # 파일 닫기

num_list = num.split() # 구분자를 통해 문자를 나눠서 리스트형으로 변환

print(insertion_sort(num_list, len))

def insertion_sort(A, len):
    swap_count = 0
    for i in range(1, int(len)):
        k = i
        print(A)
        while (k > 0):
            print(f'continue : {k}')
            if A[k] < A[k-1]:
                print(f"swap, {A[k]} < {A[k-1]}")
                temp = A[k]
                A[k] = A[k-1]
                A[k-1] = temp
                swap_count +=1
            k = k - 1

    return swap_count


len = 6


num_list = [6, 10, 4, 5, 1, 2]

print(insertion_sort(num_list, len))